plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation enforcedPlatform("${quarkusPlatformGroupId}:quarkus-camel-bom:${quarkusPlatformVersion}")
    implementation 'org.apache.camel.quarkus:camel-quarkus-core'
    implementation 'org.apache.camel.quarkus:camel-quarkus-direct'
    implementation 'org.apache.camel.quarkus:camel-quarkus-jackson'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-kubernetes'
    implementation 'io.quarkus:quarkus-container-image-jib'
    implementation 'io.quarkus:quarkus-micrometer'
    implementation 'org.apache.camel.quarkus:camel-quarkus-log'
    implementation 'org.apache.camel.quarkus:camel-quarkus-microprofile-health'
    implementation 'org.apache.camel.quarkus:camel-quarkus-kubernetes'
    implementation 'org.apache.camel.quarkus:camel-quarkus-bean'
    // implementation 'io.quarkus:quarkus-kubernetes-client'
    implementation 'org.bouncycastle:bcpkix-jdk18on'
    implementation 'io.quarkus:quarkus-rest-jackson'
    // implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'org.apache.camel.quarkus:camel-quarkus-micrometer'
    // implementation 'io.smallrye.reactive:smallrye-reactive-messaging-camel'
    // implementation 'io.quarkus:quarkus-mutiny-reactive-streams-operators'
    implementation 'org.apache.camel:camel-reactive-streams'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'org.cch'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
